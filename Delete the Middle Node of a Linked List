
class ListNode {
    int val;
    ListNode next;
    
    ListNode() {}
    ListNode(int val) { 
        this.val = val; 
    }
    ListNode(int val, ListNode next) { 
        this.val = val; 
        this.next = next; 
    }

    
    public static ListNode deserialize(String data) {
        if (data == null || data.length() <= 2) {
            return null;
        }
        data = data.substring(1, data.length() - 1); 
        String[] parts = data.split(",");
        ListNode dummy = new ListNode(0);
        ListNode current = dummy;
        for (String part : parts) {
            current.next = new ListNode(Integer.parseInt(part.trim()));
            current = current.next;
        }
        return dummy.next;
    }
}

class Solution {
    public ListNode deleteMiddle(ListNode head) {
        if (head == null || head.next == null) {
            
            return null;
        }
        
        ListNode slow = head;
        ListNode fast = head;
        ListNode prev = null;
        
        // Move fast pointer twice as fast as slow
        while (fast != null && fast.next != null) {
            prev = slow;       
            slow = slow.next;  
            fast = fast.next.next; 
        }
        
        
        prev.next = slow.next;
        
        return head;
    }
}



public class Main {
    public static void main(String[] args) {
        Solution sol = new Solution();
        
        ListNode head = ListNode.deserialize("[1,3,4,7,1,2,6]");
        head = sol.deleteMiddle(head);
        
        
        ListNode curr = head;
        while (curr != null) {
            System.out.print(curr.val + " ");
            curr = curr.next;
        }
        
    }
}

