
class ListNode {
    int val;
    ListNode next;
    
    ListNode() {}
    ListNode(int val) { 
        this.val = val; 
    }
    ListNode(int val, ListNode next) { 
        this.val = val; 
        this.next = next; 
    }

    
    public static ListNode deserialize(String data) {
        if (data == null || data.length() <= 2) { 
            return null;
        }
        data = data.substring(1, data.length() - 1);
        String[] parts = data.split(",");
        ListNode dummy = new ListNode(0);
        ListNode current = dummy;
        for (String part : parts) {
            current.next = new ListNode(Integer.parseInt(part.trim()));
            current = current.next;
        }
        return dummy.next;
    }
}

class Solution {
    public boolean isPalindrome(ListNode head) {
        if (head == null || head.next == null) return true;
        
        
        ListNode slow = head, fast = head;
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        
        
        ListNode secondHalfStart = reverseList(slow);
        
        
        ListNode firstHalfStart = head;
        ListNode secondHalfCopy = secondHalfStart; 
        
        while (secondHalfStart != null) {
            if (firstHalfStart.val != secondHalfStart.val) {
                return false;
            }
            firstHalfStart = firstHalfStart.next;
            secondHalfStart = secondHalfStart.next;
        }
        
       

        return true;
    }
    
  
    private ListNode reverseList(ListNode head) {
        ListNode prev = null;
        ListNode curr = head;
        
        while (curr != null) {
            ListNode nextTemp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = nextTemp;
        }
        
        return prev;
    }
}


public class Main {
    public static void main(String[] args) {
        Solution sol = new Solution();
        
        ListNode head1 = ListNode.deserialize("[1,2,2,1]");
        System.out.println(sol.isPalindrome(head1)); // Output: true
        
        ListNode head2 = ListNode.deserialize("[1,2]");
        System.out.println(sol.isPalindrome(head2)); // Output: false
    }
}
