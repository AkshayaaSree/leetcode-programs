import java.util.*;

public class Solution {
    public int[][] merge(int[][] intervals) {
        // Sort by the start time
        Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0]));

        List<int[]> merged = new ArrayList<>();

        for (int[] interval : intervals) {
            
            if (merged.isEmpty() || merged.get(merged.size() - 1)[1] < interval[0]) {
                merged.add(interval);
            } else {
                
                merged.get(merged.size() - 1)[1] = 
                    Math.max(merged.get(merged.size() - 1)[1], interval[1]);
            }
        }

        return merged.toArray(new int[merged.size()][]);
    }
    public class Main {
    public static void main(String[] args) {
    Solution mi = new Solution();

        int[][] input1 = {{1,3}, {2,6}, {8,10}, {15,18}};
        int[][] result1 = mi.merge(input1);
        print(result1);  // [[1, 6], [8, 10], [15, 18]]

        int[][] input2 = {{1,4}, {4,5}};
        int[][] result2 = mi.merge(input2);
        print(result2);  // [[1, 5]]
    }

    private static void print(int[][] intervals) {
        for (int[] interval : intervals) {
            System.out.print(Arrays.toString(interval) + " ");
        }
        System.out.println();
    }
}

}
